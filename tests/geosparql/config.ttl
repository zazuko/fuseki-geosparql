@prefix :          <#> .
@prefix fuseki:    <http://jena.apache.org/fuseki#> .
@prefix rdf:       <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:      <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ja:        <http://jena.hpl.hp.com/2005/11/Assembler#> .
@prefix tdb2:      <http://jena.apache.org/2016/tdb#> .
@prefix geosparql: <http://jena.apache.org/geosparql#> .

[] rdf:type fuseki:Server ;
   # Example::
   # Server-wide query timeout.
   #
   # Timeout - server-wide default: milliseconds.
   # Format 1: "1000" -- 1 second timeout
   # Format 2: "10000,60000" -- 10s timeout to first result,
   #                            then 60s timeout for the rest of query.
   #
   # See javadoc for ARQ.queryTimeout for details.
   # This can also be set on a per dataset basis in the dataset assembler.
   #
   # ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "30000" ] ;

   # Add any custom classes you want to load.
   # Must have a "public static void init()" method.
   # ja:loadClass "your.code.Class" ;

   # End triples.
   .

<#service> rdf:type fuseki:Service;
  fuseki:name "ds";

  fuseki:endpoint [ fuseki:operation fuseki:query ; ];
  fuseki:endpoint [ fuseki:operation fuseki:query ; fuseki:name "sparql" ];
  fuseki:endpoint [ fuseki:operation fuseki:query ; fuseki:name "query" ];
  fuseki:endpoint [ fuseki:operation fuseki:gsp-r ; ];
  fuseki:endpoint [ fuseki:operation fuseki:gsp-r ; fuseki:name "get" ];

  fuseki:dataset <#ds> ;
  .

<#ds> rdf:type geosparql:geosparqlDataset ;
  geosparql:spatialIndexFile "spatial.index";

  # some GeoSPARQL settings
  geosparql:inference            true ;
  geosparql:queryRewrite         true ;
  geosparql:indexEnabled         true ;
  geosparql:applyDefaultGeometry false ;

  # 3 item lists: [Geometry Literal, Geometry Transform, Query Rewrite]
  geosparql:indexSizes           "-1,-1,-1" ;       # Default - unlimited.
  geosparql:indexExpires         "5000,5000,5000" ; # Default - time in milliseconds.

  geosparql:dataset <#baseDataset> ;
  .

<#baseDataset> rdf:type ja:RDFDataset ;
  rdfs:label "Dataset for tests" ;
  ja:defaultGraph
    [ rdfs:label "data.nt" ;
      a ja:MemoryModel ;
      ja:content [ja:externalContent <file:/data/data.nt> ] ;
    ] ;
  .
